<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: vim | 子龙山人]]></title>
  <link href="http://andyque.github.com/tags/vim/atom.xml" rel="self"/>
  <link href="http://andyque.github.com/"/>
  <updated>2013-01-14T19:02:56+08:00</updated>
  <id>http://andyque.github.com/</id>
  <author>
    <name><![CDATA[Guanghui.Qu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[make your gvim a IDE on Windows 7]]></title>
    <link href="http://andyque.github.com/blog/2012/12/20/make-gvim-a-ide-on-windows-7/"/>
    <updated>2012-12-20T17:49:00+08:00</updated>
    <id>http://andyque.github.com/blog/2012/12/20/make-gvim-a-ide-on-windows-7</id>
    <content type="html"><![CDATA[<p><img class="right" src="/images/posts/vim-logo-en.png" width="300" height="300"></p>

<h2>Introduction</h2>

<p>According to the online survey, Vim become the second most favourite IDE in the world. Really surprising, don't you?</p>

<p>I have successfully configured Vim on my Mac, using git and pathogen to manage my Vim plugins. Here is my Github<a href="https://github.com/andyque/dotvim">Repository</a>.</p>

<p>Because I am a big fan of cocos2d, so I set up another Github Repository,named
<a href="https://github.com/andyque/Cocos2DTags">Cocos2DTags</a> . I use Exuberant Ctags 5.8 to generate ctags for code and tag
navigations. Due to the lack of good understanding of modern javascript programming, I use DoctorJs(Jsctags) to generate js tags.</p>

<p>I have made my Vim very suitable for c/c++, lua and javascript development, especially for cocos2d-x and cocos2d-html5 game development. The above three repo is still young, but I will make them better with more practice and efforts.</p>

<p>I'm a little compulsive, so I want to make my Vim running on every platform. Recently mainly for windows, mac and ubuntu. The configuration process for mac and ubuntu is intuitive. But it's not the same with windows. So this blog post is mainly for recoding the configure process of gvim on windows 7 64-bit platform.</p>

<!--more-->


<h2>Installation</h2>

<p>Install gvim on windows is very easy. You can download the green version of <a href="http://code.google.com/p/vim-win3264/downloads/detail?name=vim73-x64.zip&amp;can=2&amp;q=">gvim</a>. This is a 64-bit version of gvim. So make sure your windows system is 64-bit. After download it, you can extract it into  your login user account. Like c:/User/xxx(the "xxx" is your account name). Then open the vim73 directory, and double click the install.exe to install gvim. After installation, you can find three gvim shortcuts on your desktop.</p>

<h2>Configure your existing Vim Repo</h2>

<ul>
<li>Use git to clone my repo to <code>vimfles</code> directory. This fold lies in the same level with vim73 directory . The vimfiles directory looks like the following:</li>
</ul>


<p><img class="left" src="/images/posts/win7vimfiles.jpg" width="750" height="300"></p>

<ul>
<li>Configure your <em>vimrc file in your $HOME directory. (Note: $HOME is the c:/User/xxx). Add the following scripts to your </em>vimrc file.</li>
</ul>


<p><code>c++
source $VIMRUNTIME..\vimfiles\vimrc
</code></p>

<p>Now the gvim can work with your existing Vim configurations.</p>

<h2>Configure your plugins</h2>

<ul>
<li><p>Configure TagBar and Cppomnicomplete plugin. You should install Exuberant Ctags 5.8, and put catgs.exe to your"PATH"(Like System32 directory).</p></li>
<li><p>Install Python2.7.1 64-bit versioin.</p></li>
<li><p>Install splint for c++ syntax checking, jslint for javascript and luac for lua syntax checking.</p></li>
<li><p>Configure snipMate plugin. Open vimfile/bundle/snipMat/plugin/snipMat.vim,add the following code to replace the 24th line .</p></li>
</ul>


<p>``` c++
let snippets_dir = substitute(substitute(globpath(&amp;rtp, 'snippets/'), "\n", ',', 'g'), 'snippets\,', 'snippets,', 'g')</p>

<p>```</p>

<h2>Last revise</h2>

<p>We can add the following scripts at the end of _vimrc files:</p>

<p><code>c++
set guioptions-=m
set guioptions-=T
</code></p>

<p>These two lines can hidden your gvim Toolbar and Menubar.</p>

<p>If you don't like win32 command line commands, you can install <a href="http://dl.vmall.com/c0l2p58pa6">this package</a> for convenience.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[configuration vim and opencv2.4.2 on macos 10.8.2]]></title>
    <link href="http://andyque.github.com/blog/2012/12/17/configuration-vim-and-opencv2-4-2-on-macos-10-8-2/"/>
    <updated>2012-12-17T17:49:00+08:00</updated>
    <id>http://andyque.github.com/blog/2012/12/17/configuration-vim-and-opencv2-4-2-on-macos-10-8-2</id>
    <content type="html"><![CDATA[<p><img class="right" src="/images/posts/vim-logo-en.png" width="300" height="300"></p>

<h2>Introduction</h2>

<p>Now vim has become the "killer" editor for me. I use it for coding c/c++,lua,javascript and I find it is very powerful for scripting languages.</p>

<p>Recently, I am studying the OpenCV library. So I want to make my vim suitable for developing opencv programs.</p>

<p>Here is the configuration process.</p>

<!--more-->


<h2>Install OpenCV 2.4.2</h2>

<p>You can follow these two links for the installation instructions.</p>

<p><a href="http://tech.enekochan.com/2012/05/21/use-opencv-in-xcode-4-for-a-mac-os-x-application/">http://tech.enekochan.com/2012/05/21/use-opencv-in-xcode-4-for-a-mac-os-x-application/</a></p>

<p><a href="http://tech.enekochan.com/2012/05/21/install-opencv-2-3-1a-in-mac-os-x-10-6/">http://tech.enekochan.com/2012/05/21/install-opencv-2-3-1a-in-mac-os-x-10-6/</a></p>

<h2>Generate opencv ctags</h2>

<p>In order to generate ctags for opencv,you should install stags first. But be careful that the default ctags program shipped with mac is outdated. You should use homebrew to install the newest version of ctags.</p>

<h3>Install Exuberant CTags</h3>

<p>Open your terminal and write the following commands:</p>

<p><code>c++
brew install ctags-exuberant
</code></p>

<p>If you wonder whether the installation is successfully or not. You can type the "ctags --version".If you get the following output, then congratulations, you did it.</p>

<p><code>c++
uberant Ctags 5.8, Copyright (C) 1996-2009 Darren Hiebert
  Compiled: Nov  7 2012, 16:32:27
  Addresses: &lt;dhiebert@users.sourceforge.net&gt;, http://ctags.sourceforge.net
  Optional compiled features: +wildcards, +regex
</code></p>

<p>After installation, We can use ctags to generate tag list for opencv code auto completion.</p>

<h3>Generate ctags.</h3>

<p><code>c++
cd /usr/local/include
ctags -R --c++-kinds=+p --fields=+iaS --extra=+q ./
</code></p>

<p>Then you can use the generated tags for auto completion. For more information, you can refer to this <a href="http://stackoverflow.com/questions/8155310/autocomplete-of-opencv-functions-with-vim">link</a>.</p>

<h2>Configure your vimrc file</h2>

<p>``` c++
"add command to complie opencv program"
nnoremap <silent><leader>2 :call CompileRunOpencv() <CR>
function! CompileRunOpencv()</p>

<pre><code>let IncDir = "/usr/local/include"
let LibDir = "/usr/local/lib"
let Libs = "-lopencv_core -lopencv_highgui -lopencv_imgproc"
exec "w"
exec "lcd %:p:h"
exec "r !g++ -I" . IncDir . " -L" . LibDir . " % " . Libs . " -o %&lt; "
echo "compile finished!"
</code></pre>

<p>endfunc
```</p>

<p>Now, you can use (leader 2) to compile your opencv file.</p>

<p>At last, I post my macvim screen here:</p>

<p><img class="left" src="/images/posts/myvim.jpg" width="750" height="300"></p>

<h2>Limitations</h2>

<p>With the above method, you can only compile one file at a time. So if you have more than one file, you could change theresponding g++ compile instructions.</p>

<h2>References</h2>

<p><a href="http://stackoverflow.com/questions/8155310/autocomplete-of-opencv-functions-with-vim">http://stackoverflow.com/questions/8155310/autocomplete-of-opencv-functions-with-vim</a></p>

<p><a href="http://bsd-noobz.com/opencv-guide/32-4-set-up-opencv-in-vim">http://bsd-noobz.com/opencv-guide/32-4-set-up-opencv-in-vim</a></p>

<p><a href="http://blog.damiles.com/2009/07/exuberant-ctags-and-opencv-with-vim-thanks-piponazo/">http://blog.damiles.com/2009/07/exuberant-ctags-and-opencv-with-vim-thanks-piponazo/</a></p>

<p><a href="http://plagatux.es/2009/02/generar-etiquetas-con-ctags-y-usarlas-en-vim/comment-page-1/#comment-1716">http://plagatux.es/2009/02/generar-etiquetas-con-ctags-y-usarlas-en-vim/comment-page-1/#comment-1716</a></p>
]]></content>
  </entry>
  
</feed>
